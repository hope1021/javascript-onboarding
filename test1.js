/* 책 조건
  - 1~400p
  - 왼쪽-홀수(1p) 오른쪽-짝수(2p)

  [페이지 번호 게임 조건]
  1. 책을 임의로 펼친다.
    -> 1번과 400은 나오면 안되게 설정
    -> 그리고 임의로 값이 설정되야함.
    -> 연속된 숫자 2개가 랜덤으로 나와야함.
  2. 왼쪽 페이지 번호의 각 자리 숫자를 모두 더하거나, 모두 곱해 가장 큰 수를 구한다.
  3. 오른쪽 페이지 번호의 각 자리 숫자를 모두 더하거나, 모두 곱해 가장 큰 수를 구한다.
    -> ⓐ 왼쪽 페이지인 경우 (ex.97)
    -> 배열 2개 생성 (덧셈값 / 곱셈값)
      -> 덧셈값 구하기 (9+7) 배열1에 저장.
      -> 곱셈값 구하기 (9*7) 배열2에 저장.
      -> 각 배열의 값 비교해서 큰 값을 새로운 배열로 저장.
    -> ⓑ 오른쪽 페이지(ex.98)도 동일하게 진행
    -> ⓒ 최종적으로 좌우페이지의 값을 비교해서 최댓값을 선정
  4. 포비와 크롱의 값을 비교
    -> 포비 > 크롱 => 1
    -> 포비 < 크롱 => 2
    -> 포비 = 크롱 => 0
    -> 에러인 경우 => -1
 */

// problem1 함수 정의
function problem1(pobi, crong) { //매개변수 : pobi, crong
    // 변수 선언
    /* var : 중복 선언이 가능, 재할당 가능
       let : 중복 선언 불가능, 재할당 가능
       const : 중복 선언 불가능, 재할당 불가능 */
    var answer;
  
    var bookpage = new Array(2); // 책 배열
    for(var bp=1; bp<=bookpage.length; i++){
      bookpage[bp] = new Array(200);
    }
    
    console.log(bookpage);
  
  
    return answer; // return문 : 함수에 의해 반환되는 값을 지정
  }
  
  module.exports = problem1;
  